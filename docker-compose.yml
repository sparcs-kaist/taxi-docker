version: "3"

services:
  taxi-front:
    container_name: taxi-front
    restart: always
    build: taxi-front
    ports:
      - "${FRONT_PORT}:80"
    environment:
      - REACT_APP_BACK_URL=${BACK_URL}
      - REACT_APP_IO_URL=${SOCKET_IO_URL}
      - REACT_APP_S3_URL=${S3_URL}
      - REACT_APP_CHANNELTALK_PLUGIN_KEY=${CHANNELTALK_PLUGIN_KEY}

  taxi-back:
    container_name: taxi-back
    restart: always
    build: taxi-back
    ports:
      - "${BACK_PORT}:80"
    depends_on:
      - taxi-mongo
      - taxi-redis
    links:
      - taxi-mongo:taxi-mongo
      - taxi-redis:taxi-redis
    environment:
      - SESSION_KEY=${SESSION_KEY}
      - SPARCSSSO_CLIENT_ID=${SPARCSSSO_CLIENT_ID}
      - SPARCSSSO_CLIENT_KEY=${SPARCSSSO_CLIENT_KEY}
      - FRONT_URL=${FRONT_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - DB_PATH=mongodb://taxi-mongo:27017/taxi
      - REDIS_PATH=redis://taxi-redis:6379
    volumes:
      - taxi-back-logs:/usr/src/app:rw

  taxi-mongo:
    container_name: taxi-mongo
    restart: always
    image: mongo:4.4
    volumes:
      - ./taxi-mongo/mongodb.conf:/etc/mongodb.conf
      - taxi-mongo-logs:/var/log/mongodb/mongod.log:rw
      - taxi-mongo-data:/data/db:rw

  taxi-redis:
    container_name: taxi-redis
    restart: always
    image: redis:7.0.4-alpine

  taxi-scheduler:
    container_name: taxi-scheduler
    restart: always
    build: taxi-scheduler
    links:
      - taxi-mongo:mongodb
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BUCKET=${AWS_S3_BUCKET_NAME}
      - BACKUP_FOLDER=dump/
      - CRON_TIME=* * * * *
      - MONGODB_HOST=taxi-mongo:27017
      - DB_STR=taxi

volumes:
  taxi-mongo-logs:
    external: true
  taxi-mongo-data:
    external: true
  taxi-back-logs:
    external: true
  taxi-scheduler-logs:
    external: true
